name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install root dependencies
        run: npm ci

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test --if-present

      - name: Run backend tests
        working-directory: ./backend
        run: npm test --if-present

  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit (frontend)
        working-directory: ./frontend
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run npm audit (backend)
        working-directory: ./backend
        run: npm audit --audit-level=high
        continue-on-error: true

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Deploy to Vercel (if configured)
        # Uncomment and configure when ready to deploy
        # uses: amondnet/vercel-action@v25
        # with:
        #   vercel-token: ${{ secrets.VERCEL_TOKEN }}
        #   vercel-org-id: ${{ secrets.ORG_ID }}
        #   vercel-project-id: ${{ secrets.PROJECT_ID }}
        run: echo "Deployment step - configure with your preferred platform"
